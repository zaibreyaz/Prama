
[
  {
    "header": "Introduction to Databases",
    "subheaders": [
      {
        "subheader": "What is a database?",
        "options": [
          "A structured collection of data, organized and stored electronically for easy access, management, and update.",
          "Designed for efficient storage, retrieval, and manipulation of information."
        ]
      },
      {
        "subheader": "Types of Databases",
        "options": [
          {
            "type": "Relational Databases",
            "description": "Organize data into tables with rows and columns, enforcing relationships between them.",
            "examples": ["MySQL", "PostgreSQL", "MS SQL Server", "Oracle"]
          },
          {
            "type": "NoSQL Databases",
            "description": "Offer more flexible data models, such as document, key-value, graph, and column-family.",
            "examples": ["MongoDB", "Cassandra", "Redis", "Couchbase"]
          }
        ]
      },
      {
        "subheader": "Why Use a Database?",
        "options": [
          "Efficient data storage and retrieval.",
          "Data integrity and consistency.",
          "Data sharing and collaboration.",
          "Data analysis and reporting."
        ]
      },
      {
        "subheader": "Benefits of Using a DBMS",
        "options": [
          {
            "benefit": "Data Independence",
            "description": "Separating data from applications, allowing changes to one without affecting the other.",
            "example": "Updating the data storage format without requiring application code modifications."
          },
          {
            "benefit": "Data Integrity",
            "description": "Ensuring data accuracy, consistency, and validity through constraints and validation rules.",
            "example": "Enforcing data types, unique values, and referential integrity."
          },
          {
            "benefit": "Data Security",
            "description": "Protecting data from unauthorized access, modification, or deletion through user permissions, encryption, and access control."
            "example": "Restricting access to sensitive information based on user roles."
          },
          {
            "benefit": "Data Backup and Recovery",
            "description": "Providing mechanisms for creating backups and restoring data in case of failures or disasters.",
            "example": "Regularly backing up the database to ensure data recovery."
          },
          {
            "benefit": "Concurrency Control",
            "description": "Managing simultaneous access to data by multiple users, ensuring data consistency.",
            "example": "Using locking mechanisms to prevent data conflicts when multiple users modify the same data."
          }
        ]
      }
    ]
  }
]
